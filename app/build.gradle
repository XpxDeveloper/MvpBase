apply plugin: 'com.android.application'
apply plugin: 'com.alibaba.arouter'

def static BuildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}

def BuildUseJenkins = false

//将配置信息放入singing.properties
Properties props = new Properties()
props.load(new FileInputStream(file("signing.properties")))

android {
    compileSdkVersion rootProject.ext.compileSdk

    defaultConfig {
        applicationId "com.xpxcoder.mvpbase"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        flavorDimensions "1"

        defaultConfig {
            resConfigs "zh"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->

            variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
                //这个修改输出APK的文件名
//                if (BuildUseJenkins.toBoolean()) {
//                    // 使用jenkins打包的文件路径
                apkData.outputFileName = "mvp_base_v${defaultConfig.versionName}_${BuildTime()}.apk"
//                } else {
//                    // 使用Android Studio打包的文件路径
//                    apkData.outputFileName = "YRYC_OneStore_${variant.productFlavors[0].name}_v${defaultConfig.versionName}.apk"
//                }
            }

        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(':LibBase')
    implementation project(':LibWidget')

    //aRouter
    annotationProcessor libraries.arouter_annotation
}
